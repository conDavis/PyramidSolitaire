(this["webpackJsonpweb-solitaire-react"]=this["webpackJsonpweb-solitaire-react"]||[]).push([[0],{13:function(e,t,i){},14:function(e,t,i){},15:function(e,t,i){"use strict";i.r(t);var r,n=i(2),s=i(3),o=i.n(s),a=i(7),h=i.n(a),u=(i(13),i(0)),l=i(1),c=i(5),d=i(4);i(14);!function(e){e.NOT_STARTED="Not Started",e.STARTED="Started"}(r||(r={}));var f,v=function(){function e(){Object(u.a)(this,e),this.pyramid=void 0,this.stock=void 0,this.draws=void 0,this.gamestate=void 0,this.removalValue=13,this.gamestate=r.NOT_STARTED}return Object(l.a)(e,[{key:"startGame",value:function(e,t,i,n){if(null==e||!this.isValidDeck(e))throw new Error("The deck cannot be null.");if(!this.isEnoughCards(e.length,i,n))throw new Error("Not enough cards in this deck for this deal.");if(0==i&&0==n)throw new Error("Rows and draws cannot be zero.");if(i<=0)throw new Error("Number of rows cannot be negative or zero.");if(n<0)throw new Error("Number of draw cards cannot be negative.");var s=new Array;e.forEach((function(e){s.push(e)})),this.pyramid=this.dealCards(i,s,t),this.draws=new Array;for(var o=0;o<n;o++)this.draws.push(s[0]),s.shift();this.stock=s,this.gamestate=r.STARTED}},{key:"removeTwo",value:function(e,t,i,r){if(this.removeTwoChecks(e,t,i,r),this.isCovered(e,t)||this.isCovered(i,r))throw new Error("The card at the given index is covered and therefore cannot be removed.");this.pyramid[e][t]=null,this.pyramid[i][r]=null}},{key:"remove",value:function(e,t){if(this.checkStarted(),!this.isRowInBounds(e))throw new Error("The given row index is out of bounds.");if(!this.isCardInBounds(e,t))throw new Error("The given card index is out of bounds for the given row.");if(null==this.getCardAt(e,t))throw new Error("No card at the given index. ");if(this.getCardAt(e,t).getValue()!=this.removalValue)throw new Error("The given card does not have a value of 13, and therefore cannot be removed.");if(this.isCovered(e,t))throw new Error("The card at the given index is covered and therefore cannot be removed.");this.pyramid[e][t]=null}},{key:"removeUsingDraw",value:function(e,t,i){if(this.checkStarted(),!this.isRowInBounds(t))throw new Error("The given row index is out of bounds.");if(!this.isCardInBounds(t,i))throw new Error("The given card index is out of bounds for the given row.");if(e>=this.draws.length||e<0)throw new Error("The given draw index is out of bounds.");if(null==this.getCardAt(t,i))throw new Error("No card at the given index: "+t+", "+i+".");if(null==this.draws[e])throw new Error("No card at the given index: "+e+".");if(this.getCardAt(t,i).getValue()+this.draws[e].getValue()!=this.removalValue)throw new Error("The given cards do not sum to a value of 13, and therefore cannot be removed.");if(this.isCovered(t,i))throw new Error("The card at the given index is covered and therefore cannot be removed.");this.pyramid[t][i]=null,this.discardDraw(e)}},{key:"discardDraw",value:function(e){if(this.checkStarted(),e<0||e>=this.draws.length)throw new Error("Index does not exist in the draw pile.");if(null==this.draws[e])throw new Error("There is no card at this index.");this.stock.length>0?(this.draws[e]=this.stock[0],this.stock.shift()):this.draws[e]=null}},{key:"getNumRows",value:function(){return this.gamestate==r.NOT_STARTED?-1:this.pyramid.length}},{key:"getNumDraw",value:function(){return this.gamestate==r.NOT_STARTED?-1:this.draws.length}},{key:"getRowWidth",value:function(e){if(this.checkStarted(),!this.isRowInBounds(e))throw new Error("The given row is out of bounds.");return this.pyramid[e].length}},{key:"isGameOver",value:function(){if(this.checkStarted(),this.isGameWon())return!0;this.draws.forEach((function(e){if(null!=e)return!1}));var e=this.getUncovered();return!this.canBeRemoved(e)&&(!this.canAddToRemovalValue(e)&&!(this.getNumDraw()>0&&this.stock.length>0))}},{key:"getScore",value:function(){if(this.checkStarted(),this.isGameWon())return 0;for(var e=0,t=0;t<this.pyramid.length;t++)for(var i=0;i<this.pyramid[t].length;i++)null!=this.pyramid[t][i]&&(e+=this.pyramid[t][i].getValue());return e}},{key:"getCardAt",value:function(e,t){if(this.checkStarted(),!this.isRowInBounds(e))throw new Error("The given row index is out of bounds.");if(!this.isCardInBounds(e,t))throw new Error("The given card index is out of bounds.");return this.pyramid[e][t]}},{key:"getDrawCards",value:function(){this.checkStarted();var e=new Array;return this.draws.forEach((function(t){e.push(t)})),e}},{key:"isCovered",value:function(e,t){if(e>=this.pyramid.length||e<0)throw new Error("The given row index is out of bounds.");if(t>=this.pyramid[e].length||t<0)throw new Error("The given card index is out of bounds for the given row.");return e!=this.pyramid.length-1&&(null!=this.getCardAt(e+1,t)||null!=this.getCardAt(e+1,t+1))}},{key:"isGameWon",value:function(){for(var e=0;e<this.pyramid.length;e++)for(var t=0;t<this.pyramid[e].length;t++)if(null!=this.pyramid[e][t])return!1;return!0}},{key:"isRowInBounds",value:function(e){return e<this.pyramid.length&&e>=0}},{key:"isCardInBounds",value:function(e,t){return this.isRowInBounds(e)&&t<this.pyramid[e].length&&t>=0}},{key:"canBeRemoved",value:function(e){for(var t=0;t<e.length;t++)if(e[t].getValue()==this.removalValue)return!0;return!1}},{key:"canAddToRemovalValue",value:function(e){for(var t=0;t<e.length;t+=1)for(var i=0;i<e.length;i+=1)if(t!=i&&e[t].getValue()+e[i].getValue()==this.removalValue)return!0;return!1}},{key:"getUncovered",value:function(){for(var e=new Array,t=0;t<this.pyramid.length;t+=1)for(var i=0;i<this.pyramid[t].length;i+=1)null==this.getCardAt(t,i)||this.isCovered(t,i)||e.push(this.getCardAt(t,i));return e}},{key:"checkStarted",value:function(){if(this.gamestate==r.NOT_STARTED)throw new Error("The game has not yet started.")}},{key:"allDiscarded",value:function(){return this.draws.forEach((function(e){if(null!=e)return!1})),!0}},{key:"removeTwoChecks",value:function(e,t,i,r){if(this.checkStarted(),!this.isRowInBounds(e)||!this.isRowInBounds(i))throw new Error("The given row is out of bounds.");if(!this.isCardInBounds(e,t)||!this.isCardInBounds(i,r))throw new Error("The given card is out of bounds for the given row.");if(null==this.getCardAt(e,t))throw new Error("No card at the given index, "+e+", "+t+".");if(null==this.getCardAt(i,r))throw new Error("No card at the given index, "+i+", "+r+".");if(this.getCardAt(e,t).getValue()+this.getCardAt(i,r).getValue()!=this.removalValue)throw new Error("The given cards do not add up to 13, and therefore cannot be removed.")}}]),e}(),g=function(){function e(t,i){Object(u.a)(this,e),this.suit=void 0,this.value=void 0,this.suit=t,this.value=i}return Object(l.a)(e,[{key:"getValue",value:function(){return this.value}},{key:"equals",value:function(t){if(this==t)return!0;if(!(t instanceof e))return!1;var i=t;return this.value==i.value&&this.suit==i.suit}},{key:"toString",value:function(){return 1==this.value?"A"+this.suit.toString():11==this.value?"J"+this.suit.toString():12==this.value?"Q"+this.suit.toString():13==this.value?"K"+this.suit.toString():""+this.value+this.suit.toString()}}]),e}();!function(e){e.HEART="\u2665",e.SPADE="\u2660",e.CLUB="\u2663",e.DIAMOND="\u2666"}(f||(f={}));var w=function(e){Object(c.a)(i,e);var t=Object(d.a)(i);function i(){return Object(u.a)(this,i),t.call(this)}return Object(l.a)(i,[{key:"getPyramid",value:function(){var e=new Array;return this.pyramid.forEach((function(t){var i=new Array;t.forEach((function(e){i.push(e)})),e.push(i)})),e}}]),i}(function(e){Object(c.a)(i,e);var t=Object(d.a)(i);function i(){return Object(u.a)(this,i),t.apply(this,arguments)}return Object(l.a)(i,[{key:"getDeck",value:function(){var e=new Array,t=new Array;return t.push(f.HEART),t.push(f.SPADE),t.push(f.CLUB),t.push(f.DIAMOND),t.forEach((function(t){for(var i=1;i<14;i++)e.push(new g(t,i))})),e}},{key:"dealCards",value:function(e,t,i){for(var r=new Array,n=0;n<e;n+=1){var s=new Array;r.push(s)}i&&this.shuffle(t);for(var o=0;o<e;o+=1)for(var a=0;a<=o;a+=1)r[o].push(t[0]),t.shift();return r}},{key:"isValidDeck",value:function(e){for(var t=0;t<e.length;t+=1){for(var i=0;i<e.length;i+=1)if(t!=i&&e[t].equals(e[i]))return!1;if(null==e[t])return!1}return e.length==this.getDeck().length}},{key:"isEnoughCards",value:function(e,t,i){return t*(t+1)/2+i<=e}},{key:"shuffle",value:function(e){for(var t,i,r=e.length;0!==r;)i=Math.floor(Math.random()*r),t=e[r-=1],e[r]=e[i],e[i]=t;return e}}]),i}(v)),y=function(){function e(t,i){Object(u.a)(this,e),this.x=void 0,this.y=void 0,this.x=t,this.y=i}return Object(l.a)(e,[{key:"getX",value:function(){return this.x}},{key:"getY",value:function(){return this.y}},{key:"equals",value:function(t){if(this==t)return!0;if(!(t instanceof e))return!1;var i=t;return this.x==i.x&&this.y==i.y}}]),e}(),m=function(){function e(t,i,r,n){Object(u.a)(this,e),this.selected=void 0,this.visible=void 0,this.screenPos=void 0,this.pyramidPos=void 0,this.label=void 0,this.isDrawCard=void 0,this.CARD_WIDTH=60,this.CARD_HEIGHT=70,this.selected=!1,this.visible=!0,this.screenPos=t,this.pyramidPos=i,this.label=r,this.isDrawCard=n}return Object(l.a)(e,[{key:"render",value:function(e){e.font="25px Veranda",this.visible?this.selected?(e.fillStyle="#65b577",e.fillRect(this.screenPos.getX(),this.screenPos.getY(),this.CARD_WIDTH,this.CARD_HEIGHT),e.fillStyle="#064112",e.strokeRect(this.screenPos.getX(),this.screenPos.getY(),this.CARD_WIDTH,this.CARD_HEIGHT),e.fillText(this.label,this.screenPos.getX()+this.CARD_WIDTH/4,this.screenPos.getY()+this.CARD_HEIGHT/2)):(e.fillStyle="#ffffff",e.fillRect(this.screenPos.getX(),this.screenPos.getY(),this.CARD_WIDTH,this.CARD_HEIGHT),this.redSuit(this.label)?e.fillStyle="#ef0707":e.fillStyle="#000000",e.strokeRect(this.screenPos.getX(),this.screenPos.getY(),this.CARD_WIDTH,this.CARD_HEIGHT),e.fillText(this.label,this.screenPos.getX()+this.CARD_WIDTH/4,this.screenPos.getY()+this.CARD_HEIGHT/2)):(this.redSuit(this.label)?e.fillStyle="#ef0707":e.fillStyle="#000000",e.strokeRect(this.screenPos.getX(),this.screenPos.getY(),this.CARD_WIDTH,this.CARD_HEIGHT))}},{key:"setSelected",value:function(e){this.selected=e}},{key:"setVisible",value:function(e){this.visible=e}},{key:"setPyramidPosition",value:function(e){this.pyramidPos=e}},{key:"setLabel",value:function(e){if(null==e)throw new Error("The given label cannot be null.");this.label=e}},{key:"getScreenPosition",value:function(){return new y(this.screenPos.getX(),this.screenPos.getY())}},{key:"getPyramidPosition",value:function(){return new y(this.pyramidPos.getX(),this.pyramidPos.getY())}},{key:"getSelected",value:function(){return this.selected}},{key:"getVisible",value:function(){return this.visible}},{key:"getLabel",value:function(){return this.label}},{key:"isDrawCardCheck",value:function(){return this.isDrawCard}},{key:"suitType",value:function(e){return e.getLabel().substring(e.getLabel().length-1)}},{key:"redSuit",value:function(e){return 0==e.substring(e.length-1).localeCompare("\u2665")||0==e.substring(e.length-1).localeCompare("\u2666")}}]),e}(),k=function(){function e(t,i,r){Object(u.a)(this,e),this.controller=void 0,this.canvas=void 0,this.context=void 0,this.selected=void 0,this.score=void 0,this.cards=void 0,this.manager=this,this.selected=0,this.score=0,this.canvas=t,this.cards=new Array;var n=t.getContext("2d");this.context=n,t.addEventListener("click",this.mouseListener.bind(this),!1),i.addEventListener("click",this.actionListener.bind(this),!1),t.style.fontSize="large"}return Object(l.a)(e,[{key:"beginInteraction",value:function(e){this.controller=e}},{key:"refresh",value:function(){this.context.font="25px Veranda",this.context.fillStyle="#0b8327",this.context.fillRect(0,0,700,800),this.context.fillStyle="#ffffff",this.context.fillText("Draws:",30,510),0==this.score?(this.context.font="35px Veranda",this.context.fillText("You Won! ",500,175)):(this.context.font="25px Veranda",this.context.fillText("Score: "+this.score,500,175));for(var e=0;e<this.cards.length;e++)this.cards[e].render(this.context)}},{key:"drawCard",value:function(e){this.cards.push(e)}},{key:"makeInvisible",value:function(e){for(var t=0;t<this.cards.length;t++)this.cards[t].getPyramidPosition().equals(e)&&!this.cards[t].isDrawCardCheck()&&(this.cards[t].setVisible(!1),this.cards[t].setSelected(!1))}},{key:"updateDraws",value:function(e,t){for(var i=this.getDrawCards(),r=null,n=0;n<i.length;n++)i[n].getPyramidPosition().equals(e)&&(r=i[n]);var s=t[r.getPyramidPosition().getX()];r.setLabel(s.toString()),r.setSelected(!1);for(var o=0;o<i.length;o++)i[o].setPyramidPosition(new y(t.indexOf(this.getMatchingCard(i[o].getLabel(),t)),-1))}},{key:"deselect",value:function(e){for(var t=0;t<this.cards.length;t++)for(var i=0;i<e.length;i++)e[i].equals(this.cards[t].getPyramidPosition())&&this.cards[t].setSelected(!1)}},{key:"makeBlack",value:function(){this.context.fillStyle="#000000",this.context.fillRect(0,0,700,800)}},{key:"printMessage",value:function(e){this.context.fillStyle="#020101",this.context.fillText(e,30,550)}},{key:"updateScore",value:function(e){this.score=e}},{key:"mouseListener",value:function(e){this.selectCard(e.pageX,e.pageY-32),this.refresh()}},{key:"actionListener",value:function(e){this.controller.removeSelected(this.getSelectedCards()),this.resetSelected()}},{key:"getSelectedCards",value:function(){for(var e=new Array,t=0;t<this.cards.length;t++)this.cards[t].getSelected()&&e.push(this.cards[t].getPyramidPosition());return e}},{key:"resetSelected",value:function(){this.selected=0}},{key:"selectCard",value:function(e,t){for(var i=0;i<this.cards.length;i++){var r=this.cards[i];e>r.getScreenPosition().getX()&&e<r.getScreenPosition().getX()+60&&t>r.getScreenPosition().getY()&&t<r.getScreenPosition().getY()+70-10&&this.notCovered(r.getPyramidPosition(),r.isDrawCardCheck())&&(r.getSelected()?(this.selected--,r.setSelected(!r.getSelected())):(this.selected<2||r.getVisible())&&(this.selected++,r.setSelected(!r.getSelected())))}}},{key:"getCard",value:function(e,t){return this.cards.forEach((function(i){if(e>i.getScreenPosition().getX()&&e<i.getScreenPosition().getX()+60&&t>i.getScreenPosition().getY()&&t<i.getScreenPosition().getY()+70-10){var r=new m(i.getScreenPosition(),i.getPyramidPosition(),i.getLabel(),i.isDrawCardCheck());return r.setSelected(i.getSelected()),r.setVisible(i.getVisible()),r}})),null}},{key:"getDrawCards",value:function(){for(var e=new Array,t=0;t<this.cards.length;t++)this.cards[t].isDrawCardCheck()&&e.push(this.cards[t]);return e}},{key:"getMatchingCard",value:function(e,t){for(var i=0;i<t.length;i++)if(t[i].toString()==e)return t[i];throw new Error("No card with the given label, "+e)}},{key:"notCovered",value:function(e,t){if(t)return!0;for(var i=new y(e.getX()+1,e.getY()),r=new y(e.getX()+1,e.getY()+1),n=0;n<this.cards.length;n++){var s=this.cards[n];if((s.getPyramidPosition().equals(i)||s.getPyramidPosition().equals(r))&&s.getVisible()&&!s.isDrawCardCheck())return!1}return!0}}]),e}(),b=function(){function e(t,i){Object(u.a)(this,e),this.view=void 0,this.model=void 0,this.CARD_WIDTH=60,this.CARD_HEIGHT=70,this.view=t,this.model=i}return Object(l.a)(e,[{key:"playGame",value:function(e,t,i,r){this.model.startGame(e,t,i,r),console.log(this.model.getPyramid().length),this.view.beginInteraction(this);var n=this.model.getPyramid();console.log(n);for(var s=0;s<n.length;s++)for(var o=0;o<n[s].length;o++)this.view.drawCard(this.createPyramidViewCard(n[s][o].toString(),s,o,n.length));for(var a=this.model.getDrawCards(),h=0;h<a.length;h++)this.view.drawCard(this.createDrawViewCard(a[h].toString(),h));this.view.updateScore(this.model.getScore()),this.view.refresh()}},{key:"removeSelected",value:function(e){if(this.validCards(e))if(1==e.length&&this.containsDrawCard(e))this.discardDraw(e);else try{this.containsDrawCard(e)?this.removeWithDraw(e):this.removeWithoutDraw(e);for(var t=0;t<e.length;t++)this.view.makeInvisible(e[t])}catch(i){this.view.deselect(e)}else this.view.deselect(e);this.view.updateScore(this.model.getScore()),this.view.refresh()}},{key:"createPyramidViewCard",value:function(e,t,i,r){return new m(new y((this.CARD_WIDTH+5)*i+this.xOffset(t,r),(this.CARD_HEIGHT-10)*t+20),new y(t,i),e,!1)}},{key:"createDrawViewCard",value:function(e,t){return new m(new y(t*(this.CARD_WIDTH+5)+20,525),new y(t,-1),e,!0)}},{key:"xOffset",value:function(e,t){return(t-e-1)*(this.CARD_WIDTH+5)/2+115}},{key:"containsDrawCard",value:function(e){for(var t=0;t<e.length;t++)if(-1==e[t].getY())return!0;return!1}},{key:"validCards",value:function(e){for(var t=0,i=0;i<e.length;i++)-1==e[i].getY()&&t++;return t<=1}},{key:"discardDraw",value:function(e){try{this.model.discardDraw(e[0].getX())}catch(t){this.view.deselect(e)}this.view.updateDraws(e[0],this.model.getDrawCards())}},{key:"removeWithDraw",value:function(e){for(var t=null,i=null,r=0;r<e.length;r++)-1===e[r].getY()?t=e[r]:i=e[r];this.model.removeUsingDraw(t.getX(),i.getX(),i.getY()),this.view.updateDraws(t,this.model.getDrawCards())}},{key:"removeWithoutDraw",value:function(e){1==e.length?this.model.remove(e[0].getX(),e[0].getY()):this.model.removeTwo(e[0].getX(),e[0].getY(),e[1].getX(),e[1].getY())}}]),e}(),C=function(e){Object(c.a)(i,e);var t=Object(d.a)(i);function i(){return Object(u.a)(this,i),t.apply(this,arguments)}return Object(l.a)(i,[{key:"componentDidMount",value:function(){var e=document.getElementById("myCanvas"),t=document.getElementById("removeButton"),i=document.getElementById("rulesButton"),r=new w,n=new k(e,t,i);new b(n,r).playGame(r.getDeck(),!1,7,3)}},{key:"render",value:function(){return Object(n.jsxs)("div",{children:[Object(n.jsxs)("header",{children:[Object(n.jsx)("button",{type:"button",id:"removeButton",style:{marginTop:"0.5em",marginLeft:"12.0em",backgroundColor:"#013e04",color:"white",fontSize:"18px",fontFamily:"veranda"},children:"Remove Selected"}),Object(n.jsx)("button",{type:"button",id:"rulesButton",style:{marginTop:"0.5em",marginLeft:"0.5em",backgroundColor:"#013e04",color:"white",fontSize:"18px",fontFamily:"veranda"},children:"Rules"})]}),Object(n.jsx)("canvas",{id:"myCanvas",width:"700",height:"800",style:{border:"1px solid #942222",marginTop:"0.5em"}})]})}}]),i}(o.a.Component),D=function(e){e&&e instanceof Function&&i.e(3).then(i.bind(null,16)).then((function(t){var i=t.getCLS,r=t.getFID,n=t.getFCP,s=t.getLCP,o=t.getTTFB;i(e),r(e),n(e),s(e),o(e)}))};h.a.render(Object(n.jsx)(o.a.StrictMode,{children:Object(n.jsx)(C,{})}),document.getElementById("root")),D()}},[[15,1,2]]]);
//# sourceMappingURL=main.2fe6a364.chunk.js.map